<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.madhouse.platform</groupId>
  <artifactId>core</artifactId>
  <version>2.0.3</version>
  <packaging>jar</packaging>

  <name>core</name>
  <url>http://www.madhouse.cn</url>

  <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>4.1.2.RELEASE</spring.version>
        <mysql.version>5.1.31</mysql.version>
        <mybatis.verion>3.3.0</mybatis.verion>
        <jedis.version>2.6.0</jedis.version>
        <mybatis-spring.version>1.2.2</mybatis-spring.version>
        <logback.version>1.0.11</logback.version>
        <slf4j.api.version>1.7.5</slf4j.api.version>
        <junit.version>4.10</junit.version>
        <fastjson.version>1.1.37</fastjson.version>
        <spring-data-redis.version>1.4.2.RELEASE</spring-data-redis.version>
        <jsp-api.version>2.2</jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <commons-fileupload.version>1.3.1</commons-fileupload.version>
        <httpclient.version>4.3.5</httpclient.version>
        <servlet-api.version>3.0.1</servlet-api.version>
        <mail.version>1.4.4</mail.version>
        <druid.version>1.0.14</druid.version>
        <commons.codec.version>1.10</commons.codec.version>
  </properties>

  <dependencies>
    	<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${mail.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.verion}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-data-redis.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>
        <dependency>
		   <groupId>org.hibernate</groupId>
		   <artifactId>hibernate-validator</artifactId>
		   <version>5.4.1.Final</version>
		</dependency>
		<dependency>
		    <groupId>commons-httpclient</groupId>
		    <artifactId>commons-httpclient</artifactId>
		    <version>3.1</version>
		</dependency>
  </dependencies>
  
  <build>
        <finalName>core</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skip>true</skip>
					<!-- 即使测试失败也要打包 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5</version>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.1</version>
				<configuration>
					<!-- 提供发布项目版本的基础目录 -->
					<tagBase>http://172.16.27.97/repos/smart-exchange/Tag/BREL_GC</tagBase>
				</configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            
            <plugin>
			    <groupId>org.mybatis.generator</groupId>
			    <artifactId>mybatis-generator-maven-plugin</artifactId>
			    <version>1.3.2</version>
			    <configuration>
			        <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
			        <verbose>true</verbose>
			        <overwrite>true</overwrite>
			    </configuration>
			    <dependencies>
			        <dependency>
			            <groupId>org.mybatis.generator</groupId>
			            <artifactId>mybatis-generator-core</artifactId>
			            <version>1.3.2</version>
			        </dependency>
			    </dependencies>
			</plugin>
			
			<plugin>  
                <groupId>com.github.wvengen</groupId>  
                <artifactId>proguard-maven-plugin</artifactId>  
                <version>2.0.11</version>  
                <executions>  
                    <execution>  
                        <!-- 混淆时刻，这里是打包的时候混淆-->  
                        <phase>package</phase>  
                        <goals>  
                            <!-- 使用插件的什么功能，当然是混淆-->  
                            <goal>proguard</goal>  
                        </goals>  
                    </execution>  
                </executions>  
                <configuration>  
                    <!-- 是否将生成的PG文件安装部署-->  
                    <attach>true</attach>  
                    <!-- 是否混淆-->  
                    <obfuscate>true</obfuscate>  
                    <!-- 指定生成文件分类 -->  
                    <attachArtifactClassifier>pg</attachArtifactClassifier>  
                    <options>  
                        <!-- JDK目标版本1.7-->  
                        <option>-target 1.7</option>  
                        <!-- 不做收缩（删除注释、未被引用代码）-->  
                        <option>-dontshrink</option>  
                        <!-- 不做优化（变更代码实现逻辑）-->  
                        <option>-dontoptimize</option>  
                        <!-- 不路过非公用类文件及成员-->  
                        <option>-dontskipnonpubliclibraryclasses</option>  
                        <option>-dontskipnonpubliclibraryclassmembers</option>  
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->  
                        <option>-allowaccessmodification</option>  
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->  
                        <option>-useuniqueclassmembernames</option>  
                        <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->  
                        <option>-keeppackagenames</option>  
                        <!-- 不混淆所有特殊的类-->  
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>  
                        <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->  
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>  
                        
                        <option>-keep class com.madhouse.platform.premiummad.annotation.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.dao.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.entity.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.exception.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.holder.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.model.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.service.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.spring.** {*;}</option>
                    </options>  
                    <outjar>${project.build.finalName}-pg.jar</outjar>  
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->  
                    <libs>  
                        <lib>${java.home}/lib/rt.jar</lib>  
                    </libs>  
                    <addMavenDescriptor>false</addMavenDescriptor>
                </configuration>  
            </plugin> 
        </plugins>
  </build>
    
</project>
