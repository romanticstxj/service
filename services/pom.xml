<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.madhouse.platform</groupId>
  <artifactId>services</artifactId>
  <version>${dev.version}</version>
  <packaging>war</packaging>

  <name>services</name>
  <url>http://www.madhouse.cn</url>

  <properties>
  	<dev.version>2.0.3</dev.version>
  	<core.version>2.0.3</core.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencies>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.madhouse.platform</groupId>
            <artifactId>core</artifactId>
            <version>${core.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        
        <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>4.13.1</version>
	      <scope>test</scope>
	    </dependency>
	    
	    <dependency>
		   <groupId>org.hibernate</groupId>
		   <artifactId>hibernate-validator</artifactId>
		   <version>5.4.1.Final</version>
		</dependency>
    </dependencies>
    
    <build>
        <finalName>services</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <skip>true</skip>
                    <!-- 即使测试失败也要打包 -->
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5</version>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.1</version>
				<configuration>
					<!-- 提供发布项目版本的基础目录 -->
					<tagBase>http://172.16.27.97/repos/smart-exchange/Tag/BREL_GC</tagBase>
				</configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            
            <plugin>  
                <groupId>com.github.wvengen</groupId>  
                <artifactId>proguard-maven-plugin</artifactId>  
                <version>2.0.11</version>  
                <executions>  
                    <execution>  
                        <!-- 混淆时刻，这里是打包的时候混淆-->  
                        <phase>package</phase>  
                        <goals>  
                            <!-- 使用插件的什么功能，当然是混淆-->  
                            <goal>proguard</goal>  
                        </goals>  
                    </execution>  
                </executions>  
                <configuration>  
                    <!-- 是否将生成的PG文件安装部署-->  
                    <attach>true</attach>  
                    <!-- 是否混淆-->  
                    <obfuscate>true</obfuscate>  
                    <!-- 指定生成文件分类 -->  
                    <attachArtifactClassifier>pg</attachArtifactClassifier>  
                    <options>  
                        <!-- JDK目标版本1.7-->  
                        <option>-target 1.8</option>  
                        <option>-ignorewarnings</option> <!--忽略所有告警-->
                        <!-- 不做收缩（删除注释、未被引用代码）-->  
                        <option>-dontshrink</option>  
                        <!-- 不做优化（变更代码实现逻辑）-->  
                        <option>-dontoptimize</option>  
                        <!-- 不路过非公用类文件及成员-->  
                        <option>-dontskipnonpubliclibraryclasses</option>  
                        <option>-dontskipnonpubliclibraryclassmembers</option>  
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->  
                        <option>-allowaccessmodification</option>  
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->  
                        <option>-useuniqueclassmembernames</option>  
                        <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->  
                        <option>-keeppackagenames</option> 
                        <!-- 不混淆所有特殊的类-->  
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>  
                        <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->  
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>  
                        
                        <option>-keep class com.madhouse.platform.premiummad.controller.**</option>
                        <option>-keep class com.madhouse.platform.premiummad.filter.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.interceptor.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.dto.** {*;}</option>
                        <option>-keep class com.madhouse.platform.premiummad.validator.** {*;}</option>
                        
                    </options>  
                    <outjar>${project.build.finalName}-pg.jar</outjar>  
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->  
                    <libs>  
                        <lib>${java.home}/lib/rt.jar</lib>  
                    </libs>  
                    <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <injar>classes</injar>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin> 
            
            <plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-dependency-plugin</artifactId>  
			    <executions>  
			        <execution>  
			            <id>unpack</id>  
			            <phase>package</phase>  
			            <goals>  
			                <goal>unpack</goal>  
			            </goals>  
			            <configuration>  
			                <artifactItems>  
			                    <artifactItem>  
			                        <groupId>com.madhouse.platform</groupId>  
			                        <artifactId>services</artifactId>  
			                        <version>2.0.3</version>  
			                        <type>jar</type>  
			                        <classifier>pg</classifier>  
			                        <outputDirectory>${project.build.directory}/classes-pg</outputDirectory>  
			                    </artifactItem>  
			                </artifactItems>  
			            </configuration>  
			        </execution>  
			    </executions>  
			</plugin>  
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/resources/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
